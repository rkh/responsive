@use "functions" as *;
@use "config" as *;

/// Generates a `min-width` media query for a given breakpoint. If the smallest breakpoint is used,
/// the content will be returned without a media query.
/// 
/// @example scss Input
///   .example {
///     @include responsive.breakpoint("sm") { width: 100%; }
///     @include responsive.breakpoint("md") { width: 50%; } 
///   }
/// 
/// @example css Output
///    @media (min-width: 36em) {
///      .example {
///        width: 100%;
///      }
///    }
///    @media (min-width: 48em) {
///      .example {
///        width: 50%;
///      }
///    }
@mixin breakpoint($input, $and-up: false) {
  $min-width: responsive-width($input, "em", $first-zero: true);
  $next-breakpoint: null;

  @if not $and-up {
    $next-breakpoint: next-breakpoint($input);
  }

  @media (min-width: $min-width) {
    @if $next-breakpoint == null {
      @content;
    } @else {
      $max-width: responsive-width($next-breakpoint, "em");
      @media not all and (min-width: $max-width) {
        @content;
      }
    }
  }
}