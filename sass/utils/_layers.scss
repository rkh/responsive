@use "../config" as *;
@use "state";
@use "sass:list";
@use "sass:string";

@function layer-name($breakpoint: null, $and-up: null, $error: true, $with-namespace: true) {
  $prefix: "bp";
  @if $and-up == null { $and-up: state.and-up(); }
  @if $breakpoint == null { $breakpoint: state.breakpoint($and-up); }
  @if $breakpoint == null and $error { @error "No breakpoint set"; }
  @if $and-up { $prefix: "from-bp"; }
  @if $with-namespace and $layer-namespace { $prefix: "#{$layer-namespace}.#{$prefix}" };
  @return string.unquote("#{$prefix}-#{$breakpoint}");
}

@function layer-names($and-up: null, $include-base: false, $with-namespace: true) {
  @if $include-base {
    @return list.join(
      (base),
      layer-names($and-up, $with-namespace: $with-namespace),
      comma
    );
  }
  @if $and-up == null {
    @return list.join(
      layer-names(true, $include-base, $with-namespace: $with-namespace),
      layer-names(false, $with-namespace: $with-namespace),
      comma
    );
  }
  $names: ();
  @each $breakpoint in $breakpoint-names {
    $names: list.append(
      $names,
      layer-name($breakpoint, $and-up, $with-namespace: $with-namespace),
      $separator: comma
    );
  }
  @return $names;
}

@mixin with-top-layer {
  @if $use-layers and $layer-namespace {
    @layer #{$layer-namespace} {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin with-layer($layer: null, $with-namespace: true) {
  @if $layer == null { $layer: $use-layers; }
  @if $layer == true { $layer: layer-name($with-namespace: $with-namespace); }
  @if $layer {
    @layer #{$layer} {
      @content;
    }
  } @else {
    @content;
  }
}
